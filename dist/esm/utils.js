import{createHash as t}from"crypto";const n=/"alg"\s*:\s*"[HERP]S(256|384)"/m,e=/"alg"\s*:\s*"EdDSA"/m,o=/"crv"\s*:\s*"Ed448"/m;function c(t,n,e){const o=t(n,e);o&&"function"==typeof o.then&&o.then(t=>{process.nextTick(()=>e(null,t))}).catch(e)}function s(t){if("function"==typeof t)return[t];let n,e;return[function(t,o){return t?e(t):n(o)},new Promise((t,o)=>{n=t,e=o})]}function r(c){const s=c.split(".",1)[0],r=Buffer.from(s,"base64").toString("utf-8");let u=null;if(r.match(e)&&r.match(o))u=t("shake256",{outputLength:114});else{const e=r.match(n);u=t("sha"+(e?e[1]:"512"))}return u.update(c).digest("hex")}export{s as ensurePromiseCallback,c as getAsyncKey,r as hashToken};
